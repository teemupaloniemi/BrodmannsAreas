package ba.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import ba.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2022.03.31 13:17:55 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class AreasTest {



  // Generated by ComTest BEGIN
  /** 
   * testAreas13 
   * @throws TilaException when error
   */
  @Test
  public void testAreas13() throws TilaException {    // Areas: 13
    Areas areas = new Areas(); 
    Area a1 = new Area().register().setName("Brodmann's Area 13"); 
    Area a2 = new Area().register().setName("Brodmann's Area 14"); 
    assertEquals("From: Areas line: 18", 0, areas.getSize()); 
    areas.add(a1); assertEquals("From: Areas line: 19", 1, areas.getSize()); 
    areas.add(a2); assertEquals("From: Areas line: 20", 2, areas.getSize()); 
    assertEquals("From: Areas line: 21", a1, areas.get(0)); 
    assertEquals("From: Areas line: 22", a2, areas.get(1)); 
    assertEquals("From: Areas line: 23", false, areas.get(1) == a1); 
    assertEquals("From: Areas line: 24", true, areas.get(1) == a2); 
    assertEquals("From: Areas line: 25", true, areas.get("Brodmann's Area 13") == a1); 
    areas.get("Brodmann's Area 1"); assertEquals("From: Areas line: 26", 3, areas.getSize()); 
    assertEquals("From: Areas line: 27", true, areas.get("Brodmann's Area 1") == areas.get(2)); 
    try {
    assertEquals("From: Areas line: 28", a1, areas.get(3)); 
    fail("Areas: 28 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    areas.add(new Area().register().setName("Brodmann's Area 15")); assertEquals("From: Areas line: 29", 4, areas.getSize()); 
    areas.add(new Area().register().setName("Brodmann's Area 16")); assertEquals("From: Areas line: 30", 5, areas.getSize()); 
    areas.delete(a1); assertEquals("From: Areas line: 31", 4, areas.getSize()); 
    assertEquals("From: Areas line: 32", true, areas.get(0) == a2); 
    assertEquals("From: Areas line: 33", false, areas.contains("brOdmAnn's area 13")); 
    assertEquals("From: Areas line: 34", true, areas.contains("BrodmanN's ArEa 15")); 
    assertEquals("From: Areas line: 35", true, areas.duplicateCheck(-1, " brOdManN'S ArEa 15   "));  // -1 toimii uuden alueen idn√§ 
    assertEquals("From: Areas line: 36", null, areas.getAreaForId(-1)); 
    assertEquals("From: Areas line: 37", null, areas.getAreaForId(0)); 
    assertEquals("From: Areas line: 38", true, areas.getAreaForId(1) == a2); 
  } // Generated by ComTest END
}