package ba.test;
// Generated by ComTest BEGIN
import java.util.stream.Collectors;
import static org.junit.Assert.*;
import org.junit.*;
import ba.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2022.03.15 11:30:03 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class LfsTest {



  // Generated by ComTest BEGIN
  /** testLfs16 */
  @Test
  public void testLfs16() {    // Lfs: 16
    try {
    Lfs lfs = new Lfs(); 
    Lf lf1 = new Lf(1,2); 
    Lf lf2 = new Lf(1,3); 
    Lf lf3 = new Lf(2,1); 
    assertEquals("From: Lfs line: 23", 0, lfs.getSize()); 
    lfs.add(lf1); assertEquals("From: Lfs line: 24", 1, lfs.getSize()); 
    lfs.add(lf2); assertEquals("From: Lfs line: 25", 2, lfs.getSize()); 
    lfs.add(lf3); assertEquals("From: Lfs line: 26", 3, lfs.getSize()); 
    assertEquals("From: Lfs line: 27", lf1, lfs.get(0)); 
    assertEquals("From: Lfs line: 28", lf2, lfs.get(1)); 
    assertEquals("From: Lfs line: 29", lf3, lfs.get(2)); 
    assertEquals("From: Lfs line: 30", false, lfs.get(1) == lf1); 
    assertEquals("From: Lfs line: 31", true, lfs.get(1) == lf2); 
    lfs.add(lf1); assertEquals("From: Lfs line: 32", 4, lfs.getSize()); 
    lfs.add(lf2); assertEquals("From: Lfs line: 33", 5, lfs.getSize()); 
    assertEquals("From: Lfs line: 34", "2,3", lfs.findFunctionIDs(1).stream().map(Object::toString).collect(Collectors.joining(","))); 
    assertEquals("From: Lfs line: 35", true, lfs.containsPair(lf1)); 
    assertEquals("From: Lfs line: 36", false, lfs.containsPair(new Lf(2,2))); 
    } catch (TilaException e) { //
    }
  } // Generated by ComTest END
}